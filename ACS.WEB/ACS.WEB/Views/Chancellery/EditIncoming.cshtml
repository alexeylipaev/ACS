@model ACS.WEB.ViewModels.IncomingCorrespondencyInput

@{

    Layout = "~/Views/Shared/_LayoutChancellery.cshtml";
}
@*<!-- bootstrap 4.x is supported. You can also use the bootstrap css 3.3.x versions -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.5/css/fileinput.min.css" media="all" rel="stylesheet" type="text/css" />
            <!-- if using RTL (Right-To-Left) orientation, load the RTL CSS file after fileinput.css by uncommenting below -->
        <!-- link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.5/css/fileinput-rtl.min.css" media="all" rel="stylesheet" type="text/css" /-->
        <!-- optionally uncomment line below if using a theme or icon set like font awesome (note that default icons used are glyphicons and `fa` theme can override it) -->
        <!-- link https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css media="all" rel="stylesheet" type="text/css" /-->
        <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
        <!-- piexif.min.js is only needed for restoring exif data in resized images and when you
            wish to resize images before upload. This must be loaded before fileinput.min.js -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.5/js/plugins/piexif.min.js" type="text/javascript"></script>
        <!-- sortable.min.js is only needed if you wish to sort / rearrange files in initial preview.
            This must be loaded before fileinput.min.js -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.5/js/plugins/sortable.min.js" type="text/javascript"></script>
        <!-- purify.min.js is only needed if you wish to purify HTML content in your preview for
            HTML files. This must be loaded before fileinput.min.js -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.5/js/plugins/purify.min.js" type="text/javascript"></script>
        <!-- popper.min.js below is needed if you use bootstrap 4.x. You can also use the bootstrap js
           3.3.x versions without popper.min.js. -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
        <!-- bootstrap.min.js below is needed if you wish to zoom and preview file content in a detail modal
            dialog. bootstrap 4.x is supported. You can also use the bootstrap js 3.3.x versions. -->
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js" type="text/javascript"></script>
        <!-- the main fileinput plugin file -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.5/js/fileinput.min.js"></script>
        <!-- optionally uncomment line below for loading your theme assets for a theme like Font Awesome (`fa`) -->
        <!-- script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.5/themes/fa/theme.min.js"></script -->
        <!-- optionally if you need translation for your language then include  locale file as mentioned below -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.4.5/js/locales/LANG.js"></script>*@

@*<link href="~/Scripts/kartik-v-bootstrap-fileinput-e03b535/css/fileinput.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" media="all" rel="stylesheet" type="text/css" />
    <link href="../themes/explorer-fa/theme.css" media="all" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/kartik-v-bootstrap-fileinput-e03b535/js/plugins/sortable.js" type="text/javascript"></script>
    <script src="~/Scripts/kartik-v-bootstrap-fileinput-e03b535/js/fileinput.js" type="text/javascript"></script>
    <script src="~/Scripts/kartik-v-bootstrap-fileinput-e03b535/js/locales/fr.js" type="text/javascript"></script>
    <script src="~/Scripts/kartik-v-bootstrap-fileinput-e03b535/js/locales/es.js" type="text/javascript"></script>
    <script src="~/Scripts/kartik-v-bootstrap-fileinput-e03b535/themes/explorer-fa/theme.js" type="text/javascript"></script>
    <script src="~/Scripts/kartik-v-bootstrap-fileinput-e03b535/themes/fa/theme.js" type="text/javascript"></script>
*@

@Scripts.Render("~/bundles/fileInput")
@Styles.Render("~/Content/fileInput/css")

<h2>@ViewBag.TypeName</h2>

@using (Html.BeginForm("EditIncoming", "Chancellery", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>@ViewBag.ActionName</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateRegistration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateRegistration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateRegistration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Notice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Notice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResponsibleEmployees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.ResponsibleEmployees, new MultiSelectList(ACS.WEB.Models.Collections.Empls, "Id", "FullName"), new { @class = "chosen", multiple = "multiple", data_placeholder = "Выберите ответственного" })
                @*@Html.ListBoxFor(model => model.Selected_Responsible_Empl.SelectedId, new MultiSelectList(ACS.WEB.ViewModel.SelectedEmployeeViewModel.Collection, "id", "FullName"), new { multiple = "multiple"}, new { @class = "chosen", data_placeholder = "Выберите ответственного" })*@
                @*@Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })*@

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JournalRegistrationsChancelleryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <abbr class="search-choice-close"></abbr>
                @Html.DropDownListFor(model => model.JournalRegistrationsChancelleryId, new SelectList(ACS.WEB.Models.Collections.Journals, "Id", "Name"), new { @class = "chosen", data_placeholder = "Выберите журнал" })
                @Html.ValidationMessageFor(model => model.JournalRegistrationsChancelleryId, "", new { @class = "text-danger" })

            </div>

        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FolderChancelleryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FolderChancelleryId, new SelectList(ACS.WEB.Models.Collections.Folders, "Id", "Name"), new { @class = "chosen", data_placeholder = "Выберите папку" })
                @Html.ValidationMessageFor(model => model.FolderChancelleryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.To_EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.To_EmployeeId, new SelectList(ACS.WEB.Models.Collections.Empls, "Id", "FullName"), new { @class = "chosen", data_placeholder = "Выберите работника" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.From_ExternalOrganizationChancelleryId, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownListFor(model => model.From_ExternalOrganizationChancelleryId, new SelectList(ACS.WEB.Models.Collections.ExtlOrgs, "Id", "Name"), new { @class = "chosen", data_placeholder = "Выберите организацию" })
            </div>
        </div>

       @* @{Html.RenderPartial("_FileRecordManager", Model.FileRecordManager);}*@
        <div class="form-group">
            @Html.LabelFor(model => model.FileRecordChancelleries, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.FileRecordChancelleries, new MultiSelectList(ACS.WEB.Models.Collections.Files, "Id  ", "Name"), new { @class = "chosen", multiple = "multiple", data_placeholder = "Нет сохранённых файлов" })


            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Path, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <input type="file" name="Files" id="Files" multiple />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад к списку", "Incoming")
</div>
@section scripts
{
<script>
    $(document).ready(function () {
        // initialize with defaults
        $("#Files").fileinput();

        // with plugin options
        $("#Files").fileinput({ 'showUpload': false, 'previewFileType': 'any' });
    });
    </script>
    <script>
        $(function () {
            $('.chosen').chosen({
                width: '30%',
                allow_single_deselect: true,
                no_results_text: "Ничего не найдено!",
                disable_search_threshold: 5,
                placeholder_text_multiple: 'Выберите объекты',
                placeholder_text_single: 'Выберите объект',
            });
        });
</script>
}