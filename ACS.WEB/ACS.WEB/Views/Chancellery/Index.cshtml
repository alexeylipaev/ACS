@using ACS.WEB.ViewModel;
@model IEnumerable<ACS.WEB.ViewModel.ChancelleryViewModel>
@{
    ViewBag.Title = "Канцелярия";
    Layout = "~/Views/Shared/_LayoutCancelaria.cshtml";
}
<h2>Канцелярия</h2>
<p>
    @foreach (var item in ViewBag.Types)
    {
        using (Html.BeginForm("Create", "Chancellery", FormMethod.Get))
        {
            <div class="form-group">
                <div style="float:left; margin:10px">
                    <input type="hidden" value=@item.id name="TypeRecordId" />
                    <input type="submit" value="Создать @item.Name" class="btn btn-default" />
                </div>
            </div>
        }
        @*using (Html.BeginForm())
            {
                <div class="form-group">
                    <div style="float:left; margin:10px">
                       @if (@item as TypeRecordChancelleryViewModel != null)
                       {
                        @Html.ActionLink(string.Format("Создать {0}", (@item as TypeRecordChancelleryViewModel).Name), string.Format("Create{0}", (@item as TypeAccessViewModel).id), new { TypeRecordId = item.id }, new { @class = "btn btn-default" })
                       }
                    </div>
                </div>
            }*@
    }
</p>
<table style="margin-top: 65px;" class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RegistrationNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.JournalRegistrationsChancellery.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FolderChancellery.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Summary)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Notice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateRegistration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TypeRecordChancellery.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Employee)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ToChancelleries)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FromChancelleries)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FileRecordChancelleries)
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegistrationNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JournalRegistrationsChancellery.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FolderChancellery.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Summary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Notice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateRegistration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeRecordChancellery.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employee.FullName)
            </td>
            <td>
                @foreach (var toItem in item.ToChancelleries)
                {
                    @Html.Label(toItem.ToString());
                }
            </td>
            <td>
                @foreach (var toItem in item.FromChancelleries)
                {
                    @Html.Label(toItem.ToString());
                }
            </td>
            <td style="font-size:12px;">
               
                    @foreach (var file in item.FileRecordChancelleries.Where(f => f.s_InBasket == false))
                {
                        <div style="display:inline-flex; line-height:25px">
                            @Html.ActionLink(@file.Name + file.Format, "DownloadFile", new { id = file.id }, new { target = "_blank" })
                            @Html.ActionLink("x", "DettachFile", new { ChancelleryId = item.id, FileId = file.id }, new { @class = "close" })
                        </div>
                    }
                   
            </td>
            <td>
                @Html.ActionLink("Редактировать", "Edit", new { id = item.id }) |
                @Html.ActionLink("Подробнее", "Details", new { id = item.id }) |
                @Html.ActionLink("Удалить", "Delete", new { id = item.id })|
                @Html.ActionLink("Прикрепить файлы", "AttachFiles", new { ChancelleryId = item.id })
            </td>
        </tr>
    }
</table>
